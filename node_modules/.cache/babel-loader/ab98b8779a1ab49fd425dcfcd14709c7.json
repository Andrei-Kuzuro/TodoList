{"ast":null,"code":"var _jsxFileName = \"/Users/andreikuzuro/Documents/Stady/Projects/Git/js-pro-course/feature/ToDoList/src/components/ToDoItem/ToDoItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from '../Button/Button';\nimport styles from './ToDoItem.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDoItem = ({\n  text,\n  index,\n  time,\n  onDelete,\n  onComplete,\n  completed\n}) => {\n  _s();\n\n  const [showTime, setShowTime] = useState(false);\n\n  const toggleShowTime = () => {\n    setShowTime(!showTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u2714\",\n      onClick: onComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: toggleShowTime,\n      className: styles.todoText,\n      style: {\n        textDecoration: completed ? 'line-through' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.todoIndex,\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), showTime ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u2716\",\n      onClick: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ToDoItem, \"ShrZV3gkr2Kcx1iZaTToEbsjT8A=\");\n\n_c = ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["/Users/andreikuzuro/Documents/Stady/Projects/Git/js-pro-course/feature/ToDoList/src/components/ToDoItem/ToDoItem.tsx"],"names":["Button","styles","useState","ToDoItem","text","index","time","onDelete","onComplete","completed","showTime","setShowTime","toggleShowTime","wrapper","todoText","textDecoration","todoIndex"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAWA,OAAO,MAAMC,QAAQ,GAAG,CAAE;AACZC,EAAAA,IADY;AAEZC,EAAAA,KAFY;AAGZC,EAAAA,IAHY;AAIZC,EAAAA,QAJY;AAKZC,EAAAA,UALY;AAMZC,EAAAA;AANY,CAAF,KAOI;AAAA;;AAE3B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC5BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAET,MAAM,CAACY,OAAvB;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAwB,MAAA,OAAO,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,OAAO,EAAEI,cAAZ;AACE,MAAA,SAAS,EAAEX,MAAM,CAACa,QADpB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAEN,SAAS,GAAG,cAAH,GAAoB;AAA/C,OAFT;AAAA,8BAIC;AAAM,QAAA,SAAS,EAAER,MAAM,CAACe,SAAxB;AAAA,kBAAoCX,KAAK,GAAG;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJD,EAKED,IALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EASEM,QAAQ,gBAAG;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmB,IAT7B,eAUC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAwB,MAAA,OAAO,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CA7BM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import { Button } from '../Button/Button';\nimport styles from './ToDoItem.module.css';\nimport { useState } from 'react';\n\ninterface IProps {\n\ttext: string;\n\tindex: number;\n\ttime: string;\n\tcompleted: boolean;\n\tonDelete: () => void;\n\tonComplete: () => void;\n}\n\nexport const ToDoItem = ( {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttime,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDelete,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonComplete,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompleted,\n\t\t\t\t\t\t\t\t\t\t\t\t\t}: IProps ) => {\n\t\n\tconst [ showTime, setShowTime ] = useState(false)\n\t\n\tconst toggleShowTime = () => {\n\t\tsetShowTime(!showTime)\n\t}\n\t\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t<Button text='&#10004;' onClick={onComplete}/>\n\t\t\t<p onClick={toggleShowTime}\n\t\t\t\t className={styles.todoText}\n\t\t\t\t style={{ textDecoration: completed ? 'line-through' : 'none' }}\n\t\t\t>\n\t\t\t\t<span className={styles.todoIndex}>{index + 1}</span>\n\t\t\t\t{text}\n\t\t\t</p>\n\t\t\t{showTime ? <p>{time}</p> : null}\n\t\t\t<Button text='&#10006;' onClick={onDelete}/>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}