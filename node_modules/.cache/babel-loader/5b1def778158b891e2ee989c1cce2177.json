{"ast":null,"code":"var _jsxFileName = \"/Users/andreikuzuro/Documents/Stady/Projects/Git/js-pro-course/feature/ToDoList/src/components/ToDoList/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { ToDoItem } from '../ToDoItem/ToDoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTodos = [{\n  id: '000',\n  text: 'First todo',\n  completed: false\n}, {\n  id: '111',\n  text: 'Second todo',\n  completed: true\n}];\nexport const ToDoList = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [todos, setTodos] = useState(defaultTodos);\n\n  const onClickDelete = id => {};\n\n  const onClickComplete = id => {};\n\n  const addNewTodo = () => {\n    if (text !== '') {\n      const newTodo = {\n        id: 'id' + Math.random().toString(16).slice(2),\n        text: text,\n        completed: false\n      };\n      const newTodos = [...todos, newTodo];\n      setTodos(newTodos);\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addNewTodo: addNewTodo,\n      text: text,\n      setText: setText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), todos.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(ToDoItem, {\n        index: index,\n        text: item.text,\n        onDelete: () => onClickDelete(item.id),\n        onComplete: () => onClickComplete(item.id),\n        completed: item.completed\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoList, \"z/jaLVQhM1FPgp+ctZM2hoEIO0Q=\");\n\n_c = ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/andreikuzuro/Documents/Stady/Projects/Git/js-pro-course/feature/ToDoList/src/components/ToDoList/ToDoList.tsx"],"names":["useState","Form","ToDoItem","defaultTodos","id","text","completed","ToDoList","setText","todos","setTodos","onClickDelete","onClickComplete","addNewTodo","newTodo","Math","random","toString","slice","newTodos","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,IAAI,EAAE,YAAnB;AAAiCC,EAAAA,SAAS,EAAE;AAA5C,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,IAAI,EAAE,aAAnB;AAAkCC,EAAAA,SAAS,EAAE;AAA7C,CAFmB,CAArB;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,YAAD,CAAlC;;AAEA,QAAMQ,aAAa,GAAIP,EAAD,IAAgB,CAAE,CAAxC;;AAEA,QAAMQ,eAAe,GAAIR,EAAD,IAAgB,CAAE,CAA1C;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACvB,QAAIR,IAAI,KAAK,EAAb,EAAiB;AACf,YAAMS,OAAO,GAAG;AACdV,QAAAA,EAAE,EAAE,OAAOW,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CADG;AAEdb,QAAAA,IAAI,EAAEA,IAFQ;AAGdC,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAMA,YAAMa,QAAQ,GAAG,CAAC,GAAGV,KAAJ,EAAWK,OAAX,CAAjB;AACAJ,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACAX,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAZD;;AAcA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAEK,UAAlB;AAA8B,MAAA,IAAI,EAAER,IAApC;AAA0C,MAAA,OAAO,EAAEG;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,0BACE,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,IAAI,EAAED,IAAI,CAAChB,IAHb;AAIE,QAAA,QAAQ,EAAE,MAAMM,aAAa,CAACU,IAAI,CAACjB,EAAN,CAJ/B;AAKE,QAAA,UAAU,EAAE,MAAMQ,eAAe,CAACS,IAAI,CAACjB,EAAN,CALnC;AAME,QAAA,SAAS,EAAEiB,IAAI,CAACf;AANlB,SACOe,IAAI,CAACjB,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxCM;;GAAMG,Q;;KAAAA,Q","sourcesContent":["import { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { ToDoItem } from '../ToDoItem/ToDoItem';\n\nconst defaultTodos = [\n  { id: '000', text: 'First todo', completed: false },\n  { id: '111', text: 'Second todo', completed: true },\n];\n\nexport const ToDoList = () => {\n  const [text, setText] = useState('');\n\n  const [todos, setTodos] = useState(defaultTodos);\n\n  const onClickDelete = (id: string) => {};\n\n  const onClickComplete = (id: string) => {};\n\n  const addNewTodo = () => {\n    if (text !== '') {\n      const newTodo = {\n        id: 'id' + Math.random().toString(16).slice(2),\n        text: text,\n        completed: false,\n      };\n\n      const newTodos = [...todos, newTodo];\n      setTodos(newTodos);\n      setText('');\n    }\n  };\n\n  return (\n    <div>\n      <Form addNewTodo={addNewTodo} text={text} setText={setText} />\n      {todos.map((item, index) => {\n        return (\n          <ToDoItem\n            key={item.id}\n            index={index}\n            text={item.text}\n            onDelete={() => onClickDelete(item.id)}\n            onComplete={() => onClickComplete(item.id)}\n            completed={item.completed}\n          />\n        );\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}